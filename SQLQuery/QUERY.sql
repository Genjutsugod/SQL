create database query
use query

CREATE TABLE studies (PNAME varchar(20), INSTITUTE varchar(20), COURSE varchar(20), COURSE_FEE int )

SELECT * FROM studies

INSERT INTO studies
SELECT 'ANAND','SABHARI','PGDCA',4500 UNION ALL
SELECT 'ALTAF','COIT','DCA',7200 UNION ALL
SELECT 'JULIANA','BDPS','MCA',22000 UNION ALL
SELECT 'KAMALA','PRAGATHI','DCA',5000 UNION ALL
SELECT 'MARY','SABHARI','PGDCA ',4500 UNION ALL
SELECT 'NELSON','PRAGATHI','DAP',6200 UNION ALL
SELECT 'PATRICK','PRAGATHI','DCAP',5200 UNION ALL
SELECT 'QADIR','APPLE','HDCA',14000 UNION ALL
SELECT 'RAMESH','SABHARI','PGDCA',4500 UNION ALL
SELECT 'REBECCA','BRILLIANT','DCAP',11000 UNION ALL
SELECT 'REMITHA','BDPS','DCS',6000 UNION ALL
SELECT 'REVATHI','SABHARI','DAP',5000 UNION ALL
SELECT 'VIJAYA','BDPS','DCA',48000


CREATE TABLE software (PNAME varchar(20), TITLE varchar(20), DEVELOPIN varchar(20), SCOST decimal(10,2),  DCOST int, SOLD int)


SELECT * FROM software

INSERT INTO software
SELECT 'MARY','README','CPP',300, 1200, 84 UNION ALL
SELECT 'ANAND','PARACHUTES','BASIC',399.95, 6000, 43 UNION ALL
SELECT 'ANAND','VIDEO TITLING','PASCAL',7500, 16000, 9 UNION ALL
SELECT 'JULIANA','INVENTORY','COBOL',3000, 3500, 0 UNION ALL
SELECT 'KAMALA','PAYROLL PKG.','DBASE',9000, 20000, 7 UNION ALL
SELECT 'MARY','FINANCIAL ACCT.','ORACLE',18000, 85000, 4 UNION ALL
SELECT 'MARY','CODE GENERATOR','C',4500, 20000, 23 UNION ALL
SELECT 'PATTRICK','README','CPP',300, 1200, 84 UNION ALL
SELECT 'QADIR','BOMBS AWAY','ASSEMBLY',750, 3000, 11 UNION ALL
SELECT 'QADIR','VACCINES','C',1900, 3100, 21 UNION ALL
SELECT 'RAMESH','HOTEL MGMT.','DBASE',13000, 35000, 4 UNION ALL
SELECT 'RAMESH','DEAD LEE','PASCAL',599.95, 4500, 73 UNION ALL
SELECT 'REMITHA','PC UTILITIES','C',725, 5000, 51 UNION ALL
SELECT 'REMITHA','TSR HELP PKG.','ASSEMBLY',2500, 6000, 7 UNION ALL
SELECT 'REVATHI','HOSPITAL MGMT.','PASCAL',1100, 75000, 2 UNION ALL
SELECT 'VIJAYA','TSR EDITOR','C',900, 700, 6


CREATE TABLE programmer (PNAME varchar(20), DOB date, DOJ date, GENDER varchar(2), PROF1 varchar(20), PROF2 varchar(20), SALARY int)


SELECT * FROM programmer

INSERT INTO programmer
SELECT 'ANAND','12-Apr-66','21-Apr-92','M','PASCAL','BASIC',3200 UNION ALL
SELECT 'ALTAF','02-Jul-64','13-Nov-90','M','CLIPPER','COBOL',2800 UNION ALL
SELECT 'JULIANA','31-Jan-60','21-Apr-90','F','COBOL','DBASE',3000 UNION ALL
SELECT 'KAMALA','30-Oct-68','02-Jan-92','F','C','DBASE',2900 UNION ALL
SELECT 'MARY','24-Jun-70','01-Feb-91','F','CPP','ORACLE',4500 UNION ALL
SELECT 'NELSON','11-Sep-85','11-Oct-89','M','COBOL','DBASE',2500 UNION ALL
SELECT 'PATTRICK','10-Nov-65','21-Apr-90','M','PASCAL','CLIPPER',2800 UNION ALL
SELECT 'QADIR','31-Aug-65','21-Apr-91','M','ASSEMBLY','C',3000 UNION ALL
SELECT 'RAMESH','03-May-67','28-Feb-91','M','PASCAL','DBASE',3200 UNION ALL
SELECT 'REBECCA','01-Jan-67','01-Dec-90','F','BASIC','COBOL',2500 UNION ALL
SELECT 'REMITHA','19-Apr-70','20-Apr-93','F','C','ASSEMBLY',3600 UNION ALL
SELECT 'REVATHI','02-Dec-69','02-Jan-92','F','PASCAL','BASIC',3700 UNION ALL
SELECT 'VIJAYA','14-Dec-65','02-May-92','F','FOXPRO','C',3500


//1
SELECT AVG (SCOST) FROM SOFTWARE WHERE DEVELOPIN LIKE 'PASCAL'
//2
SELECT PNAME AS NAME,DATEDIFF(YY,DOB,GETDATE())AS AGE
FROM PROGRAMMER
//3
SELECT PNAME
FROM STUDIES
WHERE COURSE LIKE 'DAP'
//4
SELECT DOB,PNAME
FROM PROGRAMMER
WHERE DATEPART(MM,DOB) LIKE '1'
//5
SELECT MAX(SOLD) FROM SOFTWARE
//6
SELECT MIN(COURSE_FEE) FROM STUDIES
//7
SELECT COUNT(PNAME)
FROM STUDIES
WHERE COURSE LIKE 'PGDCA'
//8
SELECT SUM(SOLD*SCOST)
FROM SOFTWARE
WHERE DEVELOPIN LIKE 'C'
//9
SELECT *
FROM SOFTWARE
WHERE PNAME='RAMESH'
//10
SELECT COUNT(PNAME) AS NOPROGRAMMERS
FROM STUDIES
WHERE INSTITUTE='SABHARI'
//11
SELECT *
FROM SOFTWARE
WHERE (SOLD*SCOST)>2000
//12
SELECT ROUND(DCOST,SCOST)
FROM SOFTWARE
WHERE SCOST*SOLD = DCOST
//13
SELECT MAX(DCOST) FROM SOFTWARE
//14
SELECT COUNT(TITLE) AS TOTAL
FROM SOFTWARE
WHERE DEVELOPIN='DBASE'
//15
SELECT COUNT(PNAME) AS TOTAL
FROM STUDIES WHERE INSTITUTE = 'PRAGATHI'
//16
SELECT COUNT(PNAME) AS NOOFPROGRAMMERS
FROM STUDIES
WHERE COURSE_FEE>=5000
AND COURSE_FEE<=10000
//17
SELECT AVG(COURSE_FEE) FROM STUDIES
//18
SELECT * FROM PROGRAMMER WHERE PROF1='C' OR PROF2='C'
//19
SELECT COUNT (PNAME) AS PROGRAMMERS FROM PROGRAMMER WHERE PROF1 IN ('COBOL' ,'PASCAL' ) OR PROF2 IN ('COBOL' ,'PASCAL' )
//20
SELECT COUNT (PNAME) AS PROGRAMMERS FROM PROGRAMMER WHERE PROF1 NOT IN ('C','PASCAL')
AND PROF2 NOT IN ('C','PASCAL')
//21
SELECT MAX(DATEDIFF(YY,DOB,GETDATE()))
FROM PROGRAMMER
WHERE GENDER='M'
//22
SELECT AVG(DATEDIFF(YYYY,DOB,GETDATE()))
FROM PROGRAMMER WHERE GENDER LIKE 'F'
//23
SELECT PNAME,DATEDIFF(YYYY,DOJ,GETDATE()) AS EXPERIENCE
FROM PROGRAMMER ORDER BY PNAME DESC
//24
SELECT PNAME,DOB 
FROM PROGRAMMER
WHERE DATEPART(MM,DOB) LIKE GETDATE()
//25
SELECT COUNT(PNAME) AS FEMALE_PROGRAMMER
FROM PROGRAMMER WHERE GENDER LIKE 'F'
//26
SELECT DISTINCT PROF1 FROM PROGRAMMER WHERE GENDER LIKE 'M' 
UNION
SELECT DISTINCT PROF2 FROM PROGRAMMER WHERE GENDER LIKE 'M'
//27
SELECT AVG(SALARY) AS AVERAGE_SALARY 
FROM PROGRAMMER
//28
SELECT PNAME, SALARY FROM PROGRAMMER
WHERE SALARY <= 4000 AND SALARY>=2000
//29
SELECT* FROM PROGRAMMER WHERE PROF1 NOT IN ('CLIPPER','COBOL','PASCAL') AND PROF2 NOT IN ('CLIPPER','COBOL','PASCAL')
//30
SELECT PNAME,TITLE,DCOST FROM SOFTWARE
//31
SELECT PNAME,TITLE,SCOST FROM SOFTWARE
//32
SELECT PNAME,COUNT(TITLE) FROM SOFTWARE
GROUP BY PNAME
//33
SELECT DEVELOPIN,SCOST FROM SOFTWARE
//34
SELECT AVG(DCOST) AS AVG_DEV_COST, AVG(SCOST) AS AVG_SELL_COST, AVG(SCOST*SOLD) AS AVG_PRICE_PER_COPY FROM SOFTWARE
//35
SELECT PNAME , MAX(SCOST) AS COSTLIEST,MIN(SCOST) AS CHEAPEST FROM software
GROUP BY PNAME
//36
SELECT INSTITUTE, COUNT(COURSE) AS NO_OF_COURSE,AVG(COURSE_FEE)AS AVG_COST_PER_COURSE FROM STUDIES
GROUP BY INSTITUTE
//37
SELECT INSTITUTE,COUNT(PNAME) FROM STUDIES
GROUP BY INSTITUTE
//38
SELECT PNAME, GENDER FROM PROGRAMMER
ORDER BY GENDER
//39
SELECT PNAME, TITLE FROM SOFTWARE
ORDER BY PNAME
//40
SELECT COUNT(TITLE),DEVELOPIN FROM SOFTWARE WHERE DEVELOPIN NOT LIKE 'C'
GROUP BY DEVELOPIN
//41
SELECT  COUNT(TITLE),DEVELOPIN FROM SOFTWARE WHERE DCOST<1000
GROUP BY DEVELOPIN
//42
SELECT DEVELOPIN,AVG(DCOST - SCOST) FROM SOFTWARE
GROUP BY DEVELOPIN
//43
SELECT SUM(SCOST),SUM(DCOST),SUM(DCOST-(SOLD*SCOST)) FROM SOFTWARE
GROUP BY PNAME HAVING SUM(DCOST)>SUM(SOLD*SCOST)
//44
SELECT MAX(SALARY) AS HIGHEST,MIN(SALARY) AS LOWEST,AVG(SALARY) AS AVERAGE FROM PROGRAMMER WHERE SALARY>2000
//45
SELECT * FROM PROGRAMMER WHERE SALARY=(SELECT MAX(SALARY) FROM PROGRAMMER WHERE PROF1 LIKE 'C' OR PROF2 LIKE 'C')
//46
SELECT * FROM PROGRAMMER WHERE SALARY =(SELECT MAX(SALARY) FROM PROGRAMMER WHERE (PROF1 LIKE 'COBOL' OR PROF2 LIKE 'COBOL')) AND GENDER = 'F'
//47
SELECT DISTINCT PNAME , SALARY,PROF1 FROM PROGRAMMER WHERE SALARY , PROF1 IN (SELECT MAX(SALARY),PROF1 FROM PROGRAMMER GROUP BY PROF1)
//48
select*from programmer
Select top 1 PNAME, doj 
from programmer
order by doj desc
//49
select top 1 pname,doj from programmer where gender='m' and PROF1='pascal' or PROF2='pascal'
//50
SELECT PROF1 FROM PROGRAMMER GROUP BY PNAME HAVING PROF1 NOT IN (SELECT PROF2 FROM PROGRAMMER) AND COUNT(PROF1)=1
UNION 
SELECT PROF2 FROM PROGRAMMER GROUP BY PNAME HAVING PROF2 NOT IN (SELECT PROF1 FROM PROGRAMMER) AND COUNT(PROF2)=1
//52
SELECT PNAME,PROF1,PROF2,DATEDIFF(YYYY,DOB,GETDATE()) AS AGE FROM PROGRAMMER WHERE PROF1 LIKE 'DBASE' OR PROF2 LIKE 'DBASE' ORDER BY AGE
//54
select max(institute) as highest from studies
//53
SELECT * FROM PROGRAMMER WHERE GENDER= 'F' AND SALARY> 3000 AND (PROF1 NOT IN ('C','C++','ORACLE','DBASE') OR PROF2 NOT IN ('C','C++','ORACLE','DBASE'))
//55
SELECT COURSE FROM STUDIES WHERE COURSE_FEE = (SELECT MAX(COURSE_FEE) FROM STUDIES)
//56
SELECT TOP 1 COURSE_FEE,COURSE FROM STUDIES
//57
SELECT MAX(COURSE) AS TOP_COURSE FROM STUDIES
//58
SELECT INSTITUTE, COURSE_FEE FROM STUDIES WHERE COURSE_FEE<(SELECT AVG(COURSE_FEE)FROM STUDIES)
//59
SELECT COURSE FROM STUDIES WHERE COURSE_FEE<(SELECT AVG(COURSE_FEE)+1000 FROM STUDIES) AND COURSE_FEE>(SELECT AVG(COURSE_FEE)-1000 FROM STUDIES)
//60
SELECT TOP 1 DCOST,DEVELOPIN FROM SOFTWARE ORDER BY DCOST DESC
//61
select*from studies
SELECT COURSE FROM STUDIES GROUP BY COURSE HAVING COUNT(PNAME)<(select avg(ds.name) as average_name from (select count(pname) as name from studies) as ds)
//62
select top 1 developin,scost from software order by SCOST asc
//63
select top 1 PNAME,min(sold) as copies_sold from software group by PNAME order by copies_sold
//64
SELECT TOP 1 DEVELOPIN , SOLD FROM SOFTWARE
//65
select top 1 min(dcost-scost) as minimum,sold from software group by SOLD order by sold asc
//66
SELECT TOP 1 TITLE,SCOST FROM SOFTWARE WHERE DEVELOPIN LIKE 'PASCAL'
//67
SELECT DEVELOPIN FROM SOFTWARE GROUP BY DEVELOPIN HAVING MAX(DEVELOPIN) = (SELECT MAX(DEVELOPIN) FROM SOFTWARE)
//68
select pname from software group by pname having pname=(select max(pname) from software)
//69
select pname,dcost from software where dcost=(select max(dcost) from software)
//70
select title from software where SOLD<(select AVG(sold) from software)
//71
select pname from software where sold*SCOST > 2*(dcost) 
//72
select pname,TITLE from software where dcost in (select min(dcost) from software group by DEVELOPIN)
//73
SELECT PNAME, DEVELOPIN
FROM software
WHERE sold in (SELECT MAX(SOLD)
FROM software
GROUP BY PNAME)
UNION
SELECT PNAME, DEVELOPIN
FROM SOFTWARE
WHERE SOLD IN (SELECT MIN(SOLD)
FROM SOFTWARE
GROUP BY PNAME)
//74
select pname from programmer  where dob=(select min(dob) from programmer where dob like'1965%' and gender='m')
//75
select pname from programmer where dob=(select max(dob) from programmer where gender='f' and doj='1992')
//76
select top 1 YEAR(dob),count(*) as num_of_employees from programmer group by YEAR(dob) order by num_of_employees desc
//77
SELECT PROF1 FROM PROGRAMMER GROUP BY PROF1 HAVING COUNT(PROF1)=(SELECT MAX(COUNT(PROF1)) FROM PROGRAMMER GROUP BY PROF1) 
OR COUNT(PROF2)=(SELECT MAX(COUNT(PROF2))FROM PROGRAMMER GROUP BY PROF2)
UNION
SELECT PROF2 FROM PROGRAMMER GROUP BY PROF2 HAVING COUNT(PROF1)=(SELECT MAX(COUNT(PROF1)) FROM PROGRAMMER GROUP BY PROF1)
OR COUNT(PROF2)=(SELECT MAX(COUNT(PROF2))FROM PROGRAMMER GROUP BY PROF2)
//78
SELECT PNAME FROM PROGRAMMER WHERE GENDER = 'M' AND SALARY < (SELECT(AVG(SALARY))FROM PROGRAMMER WHERE GENDER= 'F')
//79
SELECT PNAME FROM PROGRAMMER WHERE GENDER = 'F' AND SALARY > (SELECT(MAX(SALARY)) FROM PROGRAMMER WHERE GENDER = 'M')
//80
select top 1 prof1 from programmer group by prof1 having prof1=(select max(prof1) from programmer) order by prof1 desc
//81
select PNAME, salary from programmer where salary = any(select salary from programmer p group by salary having salary=p.salary and count(*)>1);
//82
select*from programmer where gender='m' and SALARY>3000
//83
select*from programmer p,software s where p.pname=s.PNAME and p.gender='f' and developin='pascal'
//84
select pname from programmer where year(DOJ)<1990
//85
select s.* from software s,studies st,programmer p where s.PNAME=st.PNAME and p.PNAME=s.PNAME and GENDER='f' and INSTITUTE='pragathi'
//86
Select count(software.TITLE),count(software.sold),sum(software.sold*software.scost),studies.INSTITUTE,count(software.developin) from software ,studies 
where software.PNAME=studies.PNAME group by studies.INSTITUTE
//87
select s.*from software s,studies st,programmer p where s.PNAME=st.PNAME and p.PNAME=s.PNAME and s.DEVELOPIN='dbase' and p.GENDER='m' 
and INSTITUTE = (select institute from studies group by INSTITUTE having count(institute)>=all(select count(institute) from studies group by INSTITUTE))
//88
select s.* from programmer p,software s where s.PNAME=p.PNAME and year(DOB)<1966 and gender='m'
union
select s.* from programmer p,software s where s.PNAME=p.PNAME and YEAR(dob)>1975 and gender='f'
//89
select s.*from software s,programmer p where s.PNAME=p.PNAME and  DEVELOPIN not in (PROF1,PROF2)
select s.*from software s,programmer p where s.PNAME=p.PNAME and  (DEVELOPIN <>PROF1) and (DEVELOPIN<>PROF2)
//90
select s.*from software s,studies st,programmer p where s.PNAME=p.PNAME and st.PNAME=s.PNAME and GENDER='m' and INSTITUTE='sabhari'
//91
select pname from programmer where PNAME not in (select PNAME from software)
//92
select sum(dcost) from software where pname in(select PNAME from programmer where PROF1='apple' or PROF2='apple')
//93
select a.PNAME,datepart(dd,a.DOJ) as samedate from programmer a,programmer b where a.doj=b.doj and a.PNAME <> b.PNAME
//94
select distinct a.PNAME,a.PROF2  from programmer a,programmer b where a.PROF2 = b.PROF2 and a.PNAME<>b.PNAME
//95
select sum(sold*scost) as total,institute from software s,studies st where s.PNAME=st.PNAME group by INSTITUTE
//96
select institute from software s,studies st where s.PNAME=st.PNAME and s.DCOST=(select top 1 DCOST from software order by DCOST desc)
//97
select *from software s,programmer p where s.PNAME=p.PNAME and DEVELOPIN not in (PROF1,PROF2)
//98
select  top 1 scost*sold as maximum,course,salary from software,programmer,studies where software.PNAME=programmer.PNAME and studies.PNAME=software.PNAME 
order by maximum desc
//99
select avg(salary) as average_salary from software,programmer where software.PNAME=programmer.PNAME and scost*SOLD>50000
//100
select COUNT(software.TITLE) from software,studies where software.PNAME=studies.PNAME and COURSE_FEE=(select min(course_fee) from studies)
//101
select count(TITLE),INSTITUTE from software,studies where software.PNAME=studies.PNAME and DCOST=all(select min(dcost) 
from software ) group by INSTITUTE
//102
select count(DEVELOPIN) from programmer p,software s where s.PNAME=p.PNAME and GENDER='f' and salary>(select max(salary) from programmer p,software s 
where s.PNAME=p.PNAME and GENDER='m')
//103
select count(DEVELOPIN) from programmer p,software s where s.PNAME=p.PNAME and GENDER='f' and salary>(select max(salary) from programmer p,software s 
where s.PNAME=p.PNAME and GENDER='m')
//104

//105
select PNAME,INSTITUTE from studies where PNAME not in(select PNAME from software)
//106
select count(*),prof1
from software,programmer
where DEVELOPIN in (select prof1
from programmer) group by PROF1
//107
select p1.PNAME,count(DEVELOPIN)
from programmer p1,software s
where p1.PNAME=s.PNAME group by p1.PNAME












